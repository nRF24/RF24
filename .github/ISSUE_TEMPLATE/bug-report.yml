name: Report a problem
description: Create a report to let us help you
body:

  # This stuff will be rendered when the user is creating the issue.
  # It is not included in the issue's description when the user submits the issue
  - type: markdown
    attributes:
      value: |-
        Please read [about common issues](https://github.com/nRF24/RF24/blob/master/COMMON_ISSUES.md) first.
        It addresses the most common problems that people have (whether they know it or not).

        > [!caution]
        > These issues/tickets are intended **only for problems related to the RF24 library** source code.
        > Please use other forums/communities to ask questions that specific to _your_ source code.
        > - [Arduino Forums](https://forum.arduino.cc/)
        > - [PlatformIO forums](https://community.platformio.org/)

        We also host exhaustive [library documentation](https://nRF24.github.io/RF24).
        Please check the [API docs](https://nrf24.github.io/RF24/classRF24.html)
        and/or [platform-specific pages](https://nrf24.github.io/RF24/pages.html)
        to see if your problem is described or addressed there.

        Python users should migrate to using our [pyRF24](https://github.com/nRF24/pyRF24) python package.

        <details><summary>The pyRF24 package has numerous advantages over the older/individual python wrapper(s)</summary>

        - [x] [drop-in compatible](https://nrf24.github.io/pyRF24/#migrating-to-pyrf24)
        - [x] available via [`pip install pyrf24`](https://pypi.org/project/pyrf24/)
        - [x] no need to build from source and does not require the C++ libraries installed
        - [x] includes wrappers for RF24, RF24Network, RF24Mesh libraries and a fake BLE implementation
        - [x] includes typing stubs for type checking tools like mypy
        - [x] has [dedicated documentation](https://nrf24.github.io/pyRF24) and supports Python's builtin `help()` function

        </details>

  - type: input
    id: module
    attributes:
      label: What radio module do you use?
      description: >-
        Please tell us what type of radio(s) you are using.
        We are especially interested if you are using a PA/LNA variant.
      placeholder: nRF24L01+ PA/LNA, nRF24L01+
    validations:
      required: true

  - type: input
    id: platform
    attributes:
      label: What driver board(s) do you use?
      description: >-
        Please tell us what board(s) you are using to drive the radio.
      placeholder: Arduino UNO, RPi3, RPi Pico
    validations:
      required: true

  - type: markdown
    attributes:
      value: |-
        > [!warning]
        > Any 64-bit Linux OS requires installing RF24 libraries with
        > [our CMake instructions](https://nrf24.github.io/RF24/md_docs_2using__cmake.html).

  - type: textarea
    id: linux-os
    attributes:
      label: If using Linux, what OS are you using?
      description: |-
        This is only needed if you are using a Linux system to drive the radio.

        Please copy and paste the output for the following command:

        ```text
        uname -srm && lsb_release -a
        ```
      render: text

  - type: textarea
    id: user-issue
    attributes:
      label: Describe your problem
      description: Please use as much detail as possible.
      placeholder: Something seems broken because ...
    validation:
      required: true

  - type: markdown
    id: how-to-md
    attributes:
      value: |-
        GitHub supports their own flavor of MarkDown syntax.
        Learn more in [GitHub's documentation](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).

  - type: textarea
    id: rx-code
    attributes:
      label: What is the RX code?
      description: >-
        Use this area to show your relevant source code for RX behavior.
      value: |-
        #include <RF24.h>
        // ...
      render: cpp

  - type: textarea
    id: tx-code
    attributes:
      label: What is the TX code?
      description: >-
        Use this area to show your relevant source code for TX behavior.
      value: |-
        #include <RF24.h>
        // ...
      render: cpp
